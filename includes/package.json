{
  "name": "petaboxJS",
  "description": "petabox website JS modules, babel/JS transpiling, and LESS=>CSS compiling",
  "author": "tracey",
  "license": "AGPL-3.0",
  "browserslist": [
    "> 1%"
  ],
  "jest": {
    "rootDir": "../../../tests/js/"
  },
  "dependencies": {
    "bootstrap": "git://github.com/twbs/bootstrap.git#v3.0.0",
    "ia-design-system": "git+https://gitlab+deploy-token-1:3Q-aoJst5LMZTUErZrHx@git.archive.org/iaux/ia-design-system#0.3.0 ",
    "clipboard": "^2.0.1"
  },
  "devDependencies": {
    "//": [
      "twitter-bot and jsonfile are for TV - but not used here so removed",
      "babel-eslint and eslint-plugin-compat are for 'yarn test' and eslint",
      "the other eslint plugins are for airbnb eslint (npm info eslint-config-airbnb@latest peerDependencies --json)",
      "css-loader, file-loader, script-loader: are for webpack",
      "jest is for testing"
    ],
    "babel-cli": "6.24.1",
    "babel-core": "^6.26.3",
    "babel-eslint": "7.2.3",
    "babel-loader": "^7.1.4",
    "babel-plugin-transform-class-properties": "6.24.1",
    "babel-preset-es2015": "6.24.1",
    "babel-preset-react": "6.24.1",
    "clean-webpack-plugin": "^0.1.19",
    "css-loader": "^0.28.11",
    "eslint": "^6.8.0",
    "eslint-config-airbnb": "^18.0.1",
    "eslint-plugin-compat": "^3.3.0",
    "eslint-plugin-import": "^2.19.1",
    "eslint-plugin-jsx-a11y": "^6.2.3",
    "eslint-plugin-react": "^7.17.0",
    "eslint-plugin-react-hooks": "^1.7.0",
    "extract-loader": "^2.0.1",
    "file-loader": "^1.1.11",
    "jest": "^22.4.2",
    "less": "^3.10.3",
    "less-loader": "^4.1.0",
    "phantomjs-prebuilt": "2.1.8",
    "script-loader": "^0.7.2",
    "webpack": "^4.16.5",
    "webpack-cli": "^2.1.3",
    "webpack-merge": "^4.1.4"
  },
  "scripts": {
    "//": [
      "test command performs airbnb style and lint JS checking",
      "if you use Atom editor, install 'linter-eslint' package and code will auto-lint w/ our config!",
      "",
      "install (the standard Yarn command) and install:dev install dev (build-time) dependencies only",
      "install:prod installs prod (runtime) dependencies to a different node_modules/ from the dev dependencies",
      "install:all installs both dev and prod dependencies",
      "",
      "build, build:dev, and build:prod are Webpack-based asset build commands",
      "watch will kick off a watcher (via Webpack) and update the build files as the source files change",
      "",
      "install:website, x-build:*, and x-watch are the deprecated experimental names, now aliased to the real ones. Use install:prod, build:*, and watch now",
      "",
      "design-system:build performs a one-time build of the Archive.org site-specific design system static site. Files are saved in www/sf/site-specific-design-system/build/",
      "design-system:start runs a local Node server for the design system site. ONLY RUN IT ON YOUR COMPUTER, NOT IN DOCKER/VM-HOME",
      "",
      "setup, setup:dev, and setup:prod are 'one-shot' commands that install dependencies AND create an asset build"
    ],
    "setup:dev": "yarn install && yarn build:dev && yarn install:prod",
    "setup:prod": "yarn install && yarn build:prod && yarn install:prod",
    "setup": "yarn setup:dev",
    "test": "../../node_modules/eslint/bin/eslint.js .",
    "jest": "../../node_modules/jest/bin/jest.js .",
    "install:dev": "yarn install",
    "install:prod": "yarn install --prod --modules-folder ./node_modules",
    "install:all": "yarn install && yarn install:prod",
    "build:dev": "../node_modules/webpack/bin/webpack.js --config ./webpack.dev.js; sed -i '' -e 's!../../node_modules/bootstrap/fonts!./fonts!g' ./archive.css",
    "build:prod": "../node_modules/webpack/bin/webpack.js --config ./webpack.prod.js; sed -i '' -e 's!../../node_modules/bootstrap/fonts!./fonts!g' ./archive.min.css",
    "build": "yarn build:dev",
    "watch": "../../node_modules/webpack/bin/webpack.js --config ./webpack.dev.js --watch",
    "install:website": "echo '\ninstall:website is deprecated, use install:prod instead\n' && yarn install:prod",
    "x-build:dev": "echo '\nx-build:dev is deprecated, use build:dev instead\n' && yarn build:dev",
    "x-build:prod": "echo '\nx-build:prod is deprecated, use build:prod instead\n' && yarn build:prod",
    "x-watch": "echo '\nx-watch is deprecated, use watch instead\n' && yarn watch",
    "design-system:build": "fractal build",
    "design-system:start": "echo \"\nOnly run this on your local machine. It won't work in Docker/vm-home!\n\" && fractal start --sync"
  }
}
